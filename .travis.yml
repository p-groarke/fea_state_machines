language: cpp

before_install:
  - eval "${MATRIX_EVAL}"
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
      brew update;
      brew upgrade cmake;
      brew install python3;
    fi
install:
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
      pyenv global 3.7.1;
    fi
  - pip3 install conan
  - conan user
  - conan remote add bincrafters https://api.bintray.com/conan/conan/conan-center
  - conan profile new default --detect
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
      conan profile update settings.compiler.libcxx=libstdc++11 default;
    fi

matrix:
  include:
    - os: osx
      osx_image: xcode11.2
      env:
        - MATRIX_EVAL="CC=clang && CXX=clang++ && CONFIG=Debug"

    - os: osx
      osx_image: xcode11.2
      env:
        - MATRIX_EVAL="CC=clang && CXX=clang++ && CONFIG=Release"

    - os: linux
      dist: bionic
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-7
            - g++-7
      env:
        - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7 && CONFIG=Debug"

    - os: linux
      dist: bionic
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-7
            - g++-7
      env:
        - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7 && CONFIG=Release"

    - os: linux
      dist: bionic
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-8
            - g++-8
      env:
        - MATRIX_EVAL="CC=gcc-8 && CXX=g++-8 && CONFIG=Debug"

    - os: linux
      dist: bionic
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-8
            - g++-8
      env:
        - MATRIX_EVAL="CC=gcc-8 && CXX=g++-8 && CONFIG=Release"

script:
  - mkdir build && cd build
  - cmake .. -DBUILD_TESTING=On -DCMAKE_BUILD_TYPE=$CONFIG
  - cmake --build . --config $CONFIG
  - ./bin/fea_flat_recurse_tests

notifications:
  email:
    on_success: never
    on_failure: always
